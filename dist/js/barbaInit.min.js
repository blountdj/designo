import { CONFIG as e } from "https://cdn.jsdelivr.net/gh/blountdj/designo@v38/dist/js/config.min.js"; let contactFormInit = e => { let t = new Promise(e => { let t = () => { window.Webflow ? e(window.Webflow) : setTimeout(t, 100) }; t() }); t.then(e => { e.destroy && e.destroy(), e.push(function () { let e = document.getElementById("contact-name"), t = document.getElementById("contact-email"), a = document.getElementById("contact-phone"), n = document.getElementById("contact-message"), r = e.querySelector("input"), o = e.querySelector(".input-error-wrapper"), i = o.querySelector(".error-message-text"), c = t.querySelector("input"), s = t.querySelector(".input-error-wrapper"), l = s.querySelector(".error-message-text"), d = a.querySelector("input"), p = a.querySelector(".input-error-wrapper"), u = p.querySelector(".error-message-text"), y = n.querySelector("textarea"), m = n.querySelector(".input-error-wrapper"), g = m.querySelector(".error-message-text"); $('[wr-type="submit"]').click(function () { let e; if (e = [], e.push(checkNameInput(r, o, i)), e.push(checkEmailInput(c, s, l)), e.push(checkPhoneInput(d, p, u)), e.push(checkMessageInput(y, m, g)), !e.includes(!0) || (alert("Please check contact form errors"), 0)) { let t = document.getElementById("success-name-text"); t.innerHTML = r.value, $(this).parents("form").submit() } }) }), e.ready && e.ready() }) }; function addErrorMessage(e, t, a) { e.classList.add("is-error"), t.textContent = a } function removeErrorMessage(e) { e.classList.remove("is-error") } function checkInputLength(e, t, a, n, r) { return e.value.length < n ? (addErrorMessage(t, a, r), !0) : (removeErrorMessage(t), !1) } function checkEmptyInput(e, t, a, n) { return e.value ? (removeErrorMessage(t), !1) : (addErrorMessage(t, a, n), !0) } function checkNameInput(e, t, a) { let n = [() => checkEmptyInput(e, t, a, "Please enter your name"), () => checkInputLength(e, t, a, 2, "Minimum 2 characters"),].some((e, t) => { let a = e(); return a }); return !!n } function validateEmail(e, t, a, n) { return /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(e.value) ? (removeErrorMessage(t), !1) : (addErrorMessage(t, a, n), !0) } function isNumericAndLength(e, t, a, n, r) { return !/^[0-9]+$/.test(e.value) || e.value.length < n ? (addErrorMessage(t, a, r), !0) : (removeErrorMessage(t), !1) } function checkPhoneInput(e, t, a) { let n = [() => checkEmptyInput(e, t, a, "Please enter your phone number"), () => isNumericAndLength(e, t, a, 10, "Please enter valid phone number"),].some((e, t) => { let a = e(); return a }); return !!n } function checkEmailInput(e, t, a) { let n = [() => checkEmptyInput(e, t, a, "Please enter your email"), () => validateEmail(e, t, a, "Please enter valid email"),].some((e, t) => { let a = e(); return a }); return !!n } function checkMessageInput(e, t, a) { let n = [() => checkEmptyInput(e, t, a, "Please enter your message"), () => checkInputLength(e, t, a, 10, "Minimum 10 characters"),].some((e, t) => { let a = e(); return a }); return !!n } let homeIntroInit = e => { let t = document.querySelector(".intro-logo__image"), a = document.querySelectorAll(".nav-menu__link"), n = document.querySelector(".navbar__link-block > img"), r = document.querySelector("div.navbar.w-nav"), o = e.querySelector(".home-section__hero"), i = e.querySelector(".home-hero__image-wrapper"), c = e.querySelector(".home-hero__heading"), s = e.querySelector(".home-hero__paragraph"), l = e.querySelector(".button--light"), d = e.querySelector(".home-hero__bg-circle"), p = e.querySelector("div.home-grid__card--large"), u = e.querySelectorAll("div.home-grid__card--small"); gsap.set([t, i, c, s, l, a, n, d, p, u], { opacity: 0 }), gsap.set([r], { zIndex: 0 }), gsap.set([d], { xPercent: -150 }), gsap.set([p], { xPercent: -100 }), gsap.set([u], { xPercent: 100 }), gsap.set([i], { yPercent: 75 }), gsap.set([c, s, l], { xPercent: -100 }), gsap.set([o], { scale: 3.5 }) }, homeIntroAnimation = () => new Promise(e => { gsap.timeline({ onComplete: e }).add(() => introLogoFadeIn()).add(() => animationColumnsEnter(), 1) }), homeTransitionAnimation = e => { let t = "once" === e ? 0 : 2.25; gsap.timeline().add(() => transitionAnimationReset(), 2.25 - t).add(() => scaleTo1(".home-section__hero"), 2.5 - t).add(gsap.set("div.navbar.w-nav", { opacity: 1, zIndex: 1e3 }), 2.95 - t).add(() => navBarLinksFadeIn(), 3 - t).add(() => xPercentOpacityReturn(".home-hero__bg-circle"), 3.5 - t).add(() => yPercentOpacityReturn(".home-hero__image-wrapper"), 3.75 - t).add(() => xPercentOpacityReturn(".home-hero__heading"), 4 - t).add(() => xPercentOpacityReturn(".home-hero__paragraph"), 4.25 - t).add(() => xPercentOpacityReturn(".button--light"), 4.5 - t).add(() => xPercentOpacityReturn("div.home-grid__card--large"), 4.7 - t).add(() => xPercentOpacityReturn("div.home-grid__card--small.is-appdesign"), 5 - t).add(() => xPercentOpacityReturn("div.home-grid__card--small.is-graphicdesign"), 4.85 - t) }, aboutIntroInit = e => { let t = document.querySelectorAll(".nav-menu__link"), a = document.querySelector(".navbar__link-block > img"), n = document.querySelector("div.navbar.w-nav"), r = e.querySelector(".about__section-hero"), o = e.querySelector(".about__heading"), i = e.querySelector(".about__hero-text"), c = e.querySelector(".about__hero-bg-circle"), s = e.querySelector(".about-worldclass_section_hero"), l = e.querySelector(".about-worldclass__heading"), d = e.querySelector(".about-worldclass-text"), p = e.querySelector(".about_worldclass_bg_wrapper"); gsap.set(r, { scale: 3.5 }), gsap.set([o, i, c, t, a, l, d, p, s], { opacity: 0 }), gsap.set([n], { zIndex: 0 }), gsap.set([c], { xPercent: 150 }), gsap.set([o, i], { xPercent: -100 }), gsap.set([p], { yPercent: -150 }), gsap.set([l, d], { xPercent: 100 }) }, aboutIntroAnimation = () => { gsap.timeline().add(() => transitionAnimationReset(), 0).add(() => scaleTo1(".about__section-hero"), 0).add(() => navBarLinksFadeIn(), .6).add(gsap.set("div.navbar.w-nav", { opacity: 1, zIndex: 1e3 }), .6).add(() => xPercentOpacityReturn(".about__hero-bg-circle"), 1.35).add(() => xPercentOpacityReturn(".about__heading"), 1.7000000000000002).add(() => xPercentOpacityReturn(".about__hero-text"), 1.85).add(() => unMaskToLeft(".about-hero-mask"), 2.35).add(() => fadeIn(".about-worldclass_section_hero"), 2.5).add(() => yPercentOpacityReturn(".about_worldclass_bg_wrapper"), 2.7).add(() => xPercentOpacityReturn(".about-worldclass__heading"), 2.9).add(() => xPercentOpacityReturn(".about-worldclass-text"), 3.1).add(() => unMaskToRight(".about-worldclass__mask"), 3.45) }, locationsIntroInit = e => { let t = document.querySelectorAll(".nav-menu__link"), a = document.querySelector(".navbar__link-block > img"), n = document.querySelector("div.navbar.w-nav"), r = e.querySelector(".location_text_wrapper.is-canada"), o = e.querySelector(".location_text_wrapper.is-austalia"), i = e.querySelector(".location_text_wrapper.is-uk"), c = e.querySelector(".location-img-wrapper.is-canada"), s = e.querySelector(".location-img-wrapper.is-australia"), l = e.querySelector(".location-img-wrapper.is-uk"), d = e.querySelector(".location_text_wrapper.is-canada > .locations_circles_wrapper"), p = e.querySelector(".location_text_wrapper.is-austalia > .locations_circles_wrapper"), u = e.querySelector(".location_text_wrapper.is-uk > .locations_circles_wrapper"), y = e.querySelector(".location_text_wrapper.is-canada > .locations_h2"), m = e.querySelector(".location_text_wrapper.is-austalia > .locations_h2"), g = e.querySelector(".location_text_wrapper.is-uk > .locations_h2"), h = e.querySelector(".location_text_wrapper.is-canada > .locations_addresses_wrapper"), _ = e.querySelector(".location_text_wrapper.is-austalia > .locations_addresses_wrapper"), x = e.querySelector(".location_text_wrapper.is-uk > .locations_addresses_wrapper"); gsap.set([t, a, r, o, i, c, s, l, d, p, u, y, m, g, h, _, x], { opacity: 0 }), gsap.set([n], { zIndex: 0 }), gsap.set([r, s, i], { xPercent: -150 }), gsap.set([c, o, l], { xPercent: 100 }), gsap.set([d, p, u], { xPercent: 150 }), gsap.set([y, m, g, h, _, x], { yPercent: 100, xPercent: -45 }), gsap.set([h, _, x], { yPercent: 100, xPercent: -15 }), addBorderAnimation(r, c), addBorderAnimation(o, s), addBorderAnimation(i, l) }, locationsIntroAnimation = e => { gsap.timeline().add(gsap.set(".intro-overlay", { autoAlpha: 0 }), 0).add(() => animationColumnsLeave(), 0).add(gsap.set(".transition", { autoAlpha: 0 }), 1.25).add(() => navBarLinksFadeIn(), 0).add(gsap.set("div.navbar.w-nav", { opacity: 1, zIndex: 1e3 }), 1.75).add(() => xPercentOpacityReturn(".location_text_wrapper.is-canada"), 1.75).add(() => xPercentOpacityReturn(".location-img-wrapper.is-canada"), 1.75).add(() => xPercentOpacityReturn(".location-img-wrapper.is-australia"), 1.75).add(() => xPercentOpacityReturn(".location_text_wrapper.is-austalia"), 1.75).add(() => xPercentOpacityReturn(".location_text_wrapper.is-uk"), 1.75).add(() => xPercentOpacityReturn(".location-img-wrapper.is-uk"), 1.75).add(() => xPercentOpacityReturn(".location_text_wrapper.is-canada > .locations_circles_wrapper"), 2.5).add(() => yPercentOpacityReturn(".location_text_wrapper.is-canada > .locations_h2"), 2.2).add(() => xPercentOpacityReturn(".location_text_wrapper.is-canada > .locations_h2"), 2.2).add(() => xPercentOpacityReturn(".location_text_wrapper.is-canada > .locations_addresses_wrapper"), 2.5).add(() => yPercentOpacityReturn(".location_text_wrapper.is-canada > .locations_addresses_wrapper"), 2.5).add(() => xPercentOpacityReturn(".location_text_wrapper.is-austalia > .locations_circles_wrapper"), 2.5).add(() => yPercentOpacityReturn(".location_text_wrapper.is-austalia > .locations_h2"), 2.2).add(() => xPercentOpacityReturn(".location_text_wrapper.is-austalia > .locations_h2"), 2.2).add(() => xPercentOpacityReturn(".location_text_wrapper.is-austalia > .locations_addresses_wrapper"), 2.5).add(() => yPercentOpacityReturn(".location_text_wrapper.is-austalia > .locations_addresses_wrapper"), 2.5).add(() => xPercentOpacityReturn(".location_text_wrapper.is-uk > .locations_circles_wrapper"), 2.5).add(() => yPercentOpacityReturn(".location_text_wrapper.is-uk > .locations_h2"), 2.2).add(() => xPercentOpacityReturn(".location_text_wrapper.is-uk > .locations_h2"), 2.2).add(() => xPercentOpacityReturn(".location_text_wrapper.is-uk > .locations_addresses_wrapper"), 2.5).add(() => yPercentOpacityReturn(".location_text_wrapper.is-uk > .locations_addresses_wrapper"), 2.5) }; function addBorderAnimation(e, t) {
  let a = window.getComputedStyle(t), n = parseInt(a.borderRadius) || 0, r = document.createElementNS("http://www.w3.org/2000/svg", "svg"); r.classList.add("border-svg"); let o = document.createElementNS("http://www.w3.org/2000/svg", "path"); function i() {
    let a = t.offsetWidth, r = t.offsetHeight, i = `
        M ${n} 1
        H ${a - n}
        Q ${a - 1} 1, ${a - 1} ${n}
        V ${r - n}
        Q ${a - 1} ${r - 1}, ${a - n} ${r - 1}
        H ${n}
        Q 1 ${r - 1}, 1 ${r - n}
        V ${n}
        Q 1 1, ${n} 1
      `; o.setAttribute("d", i); let c = o.getTotalLength(); o.style.strokeDasharray = c, o.style.strokeDashoffset = c; let s = gsap.timeline({ paused: !0 }); s.to(o, { strokeDashoffset: 0, duration: .8, ease: "none" }), e.addEventListener("mouseenter", () => s.play()), e.addEventListener("mouseleave", () => s.reverse())
  } o.classList.add("border-path"), r.appendChild(o), t.style.position = "relative", t.appendChild(r), i(), window.addEventListener("resize", i)
} let contactIntroInit = () => { let e = document.querySelectorAll(".nav-menu__link"), t = document.querySelector(".navbar__link-block > img"), a = document.querySelector("div.navbar.w-nav"), n = document.querySelector(".contact_section_hero"), r = document.querySelector(".contact-h1"), o = document.querySelector(".contact-text"), i = document.querySelector(".contact-hero-circle"), c = document.querySelectorAll("#contact-form > .input-wrapper"), s = document.querySelector("#contact-form > .btn-wrapper"), l = document.querySelectorAll(".about-attributes-card"); gsap.set([n], { scale: 3.5 }), gsap.set([r, o, i, e, t, c, s, l], { opacity: 0 }), gsap.set([a], { zIndex: 0 }), gsap.set([i], { xPercent: 150 }), gsap.set([r], { yPercent: 100, xPercent: -45 }), gsap.set([o], { yPercent: 100, xPercent: -15 }), gsap.set([c, s], { yPercent: 100, xPercent: 15 }), gsap.set([l], { yPercent: 75 }) }, contactIntroAnimation = () => { gsap.timeline().add(() => transitionAnimationReset(), 0).add(() => scaleTo1(".contact_section_hero"), 0).add(() => navBarLinksFadeIn(), .6).add(gsap.set("div.navbar.w-nav", { opacity: 1, zIndex: 1e3 }), 1.1).add(() => yPercentOpacityReturn(".contact-h1"), 1.1).add(() => xPercentOpacityReturn(".contact-h1"), 1.1).add(() => yPercentOpacityReturn(".contact-text"), 1.3).add(() => xPercentOpacityReturn(".contact-text"), 1.3).add(() => xPercentOpacityReturn(".contact-hero-circle"), 2).add(() => yPercentOpacityReturnStaggered(["#contact-form > .input-wrapper", "#contact-form > .btn-wrapper"]), 1.5).add(() => xPercentOpacityReturnStaggered(["#contact-form > .input-wrapper", "#contact-form > .btn-wrapper"]), 1.5).add(() => yPercentOpacityReturnStaggered(".about-attributes-card"), 2.2) }, graphicDesignIntroInit = e => new Promise(t => { let a = document.querySelectorAll(".nav-menu__link"), n = document.querySelector(".navbar__link-block > img"), r = document.querySelector("div.navbar.w-nav"), o = e.querySelector(".graphicdesign-header"), i = e.querySelector(".bg-wrapper"), c = e.querySelector(".home-talk-h2"), s = e.querySelector(".home-talk-text"), l = e.querySelectorAll(".webdesign_main_card"), d = e.querySelectorAll("img.image-6"); gsap.set([o, d], { scale: 3.5 }), gsap.set([c, s, a, n, l, i, d], { opacity: 0 }), gsap.set([r], { zIndex: 0 }), gsap.set([i], { scale: 3.5 }), gsap.set([c], { yPercent: 100, xPercent: -45 }), gsap.set([s], { yPercent: 100, xPercent: -15 }), gsap.set([l], { yPercent: 75 }), t() }), graphicDesignIntroAnimation = () => { gsap.timeline().add(() => transitionAnimationReset(), 0).add(() => scaleTo1(".graphicdesign-header"), 0).add(() => navBarLinksFadeIn(), .6).add(gsap.set("div.navbar.w-nav", { opacity: 1, zIndex: 1e3 }), 1.1).add(() => yPercentOpacityReturn(".home-talk-h2"), 1.1).add(() => xPercentOpacityReturn(".home-talk-h2"), 1.1).add(() => yPercentOpacityReturn(".home-talk-text"), 1.3).add(() => xPercentOpacityReturn(".home-talk-text"), 1.3).add(() => scaleTo1(".bg-wrapper"), 1.6).add(() => yPercentOpacityReturnStaggered(".webdesign_main_card"), 1.5).add(() => scaleTo1("img.image-6", !0), 1.75) }, webDesignIntroInit = e => new Promise(t => { let a = document.querySelectorAll(".nav-menu__link"), n = document.querySelector(".navbar__link-block > img"), r = document.querySelector("div.navbar.w-nav"), o = e.querySelector(".webdesign-header"), i = e.querySelector(".bg-wrapper"), c = e.querySelector(".webdesign-hero-h2"), s = e.querySelector(".home-talk-text"), l = e.querySelectorAll(".webdesign_main_card"), d = e.querySelectorAll("img.image-6"); gsap.set([o, d, i], { scale: 3.5 }), gsap.set([c, s, a, n, l, i, d], { opacity: 0 }), gsap.set([r], { zIndex: 0 }), gsap.set([i], { scale: 3.5 }), gsap.set([c], { yPercent: 100, xPercent: -45 }), gsap.set([s], { yPercent: 100, xPercent: -15 }), gsap.set([l], { yPercent: 75 }), t() }), webDesignIntroAnimation = () => { gsap.timeline().add(() => transitionAnimationReset(), 0).add(() => scaleTo1(".webdesign-header"), 0).add(() => navBarLinksFadeIn(), .6).add(gsap.set("div.navbar.w-nav", { opacity: 1, zIndex: 1e3 }), 1.1).add(() => yPercentOpacityReturn(".webdesign-hero-h2"), 1.1).add(() => xPercentOpacityReturn(".webdesign-hero-h2"), 1.1).add(() => yPercentOpacityReturn(".home-talk-text"), 1.3).add(() => xPercentOpacityReturn(".home-talk-text"), 1.3).add(() => scaleTo1(".bg-wrapper", !1), 1.6).add(() => yPercentOpacityReturnStaggered(".webdesign_main_card"), 1.5).add(() => scaleTo1("img.image-6", !0), 1.75) }, appDesignIntroInit = e => new Promise(t => { let a = document.querySelectorAll(".nav-menu__link"), n = document.querySelector(".navbar__link-block > img"), r = document.querySelector("div.navbar.w-nav"), o = e.querySelector(".appdesign-header"), i = e.querySelector(".bg-wrapper"), c = e.querySelector(".home-talk-h2"), s = e.querySelector(".home-talk-text"), l = e.querySelectorAll(".webdesign_main_card"), d = e.querySelectorAll("img.image-6"); gsap.set([o, d, i], { scale: 3.5 }), gsap.set([c, s, a, n, l, i, d], { opacity: 0 }), gsap.set([r], { zIndex: 0 }), gsap.set([i], { scale: 3.5 }), gsap.set([c], { yPercent: 100, xPercent: -45 }), gsap.set([s], { yPercent: 100, xPercent: -15 }), gsap.set([l], { yPercent: 75 }), t() }), appDesignIntroAnimation = () => { gsap.timeline().add(() => transitionAnimationReset(), 0).add(() => scaleTo1(".appdesign-header"), 0).add(() => navBarLinksFadeIn(), .5).add(gsap.set("div.navbar.w-nav", { opacity: 1, zIndex: 1e3 }), 1).add(() => yPercentOpacityReturn(".home-talk-h2"), 1).add(() => xPercentOpacityReturn(".home-talk-h2"), 1).add(() => yPercentOpacityReturn(".home-talk-text"), 1.2).add(() => xPercentOpacityReturn(".home-talk-text"), 1.2).add(() => scaleTo1(".bg-wrapper", !1), 1.5).add(() => yPercentOpacityReturnStaggered(".webdesign_main_card"), 1.4).add(() => scaleTo1("img.image-6", !0), 1.65) }, locationBtnsInit = e => { let t = e.getElementById("uk-btn"), a = e.getElementById("canada-btn"), n = e.getElementById("australia-btn"); function r(e) { let t = `https://designo-project.webflow.io/locations#${e}`; window.location.href = t } t.addEventListener("click", () => r("uk-section")), a.addEventListener("click", () => r("canada-section")), n.addEventListener("click", () => r("australia-section")) }; function removeScriptsFromBody(e) { e.forEach(e => { let t = document.body.getElementsByTagName("script"); for (let a = t.length - 1; a >= 0; a--)t[a].src && t[a].src.includes(e) && t[a].parentNode.removeChild(t[a]) }) } function addScriptsToBody(e) { e.forEach(e => { let t = document.createElement("script"); t.src = e, t.type = "module", document.body.appendChild(t) }) } function addFilesCssToBody(e) { e.forEach(e => { let t = document.createElement("link"); t.rel = "stylesheet", t.href = e, document.body.appendChild(t) }) } function removeCssFilesFromBody(e) { e.forEach(e => { let t = document.body.getElementsByTagName("link"); for (let a = t.length - 1; a >= 0; a--)t[a].href && t[a].href.includes(e) && t[a].parentNode.removeChild(t[a]) }) } let introLogoFadeIn = () => { let e = document.querySelector(".intro-logo__image"); gsap.to(e, { opacity: 1, duration: 2.5, ease: "power2.out" }) }, navBarLinksFadeIn = () => { let e = document.querySelectorAll(".nav-menu__link"), t = document.querySelector(".navbar__link-block > img"); gsap.to([t, ...e], { opacity: 1, duration: .5, stagger: .1, ease: "power3.inout" }) }, xPercentOpacityReturn = e => { gsap.to(e, { xPercent: 0, opacity: 1, duration: .6, ease: "power3.inout" }) }, yPercentOpacityReturn = e => { gsap.to(e, { yPercent: 0, opacity: 1, duration: .6, ease: "power3.inout" }) }, xPercentOpacityReturnStaggered = e => { gsap.to(e, { xPercent: 0, opacity: 1, duration: .6, ease: "power3.inout", stagger: .1 }) }, yPercentOpacityReturnStaggered = e => { gsap.to(e, { yPercent: 0, opacity: 1, duration: .6, ease: "power3.inout", stagger: .1 }) }, unMaskToLeft = e => { gsap.to(e, { clipPath: "polygon(0% 0%, 0% 0%, 0% 100%, 0% 100%)", xPercent: 0, duration: 1.5, ease: "power3.inout" }) }, unMaskToRight = e => { gsap.to(e, { clipPath: "polygon(100% 0%, 100% 0%, 100% 100%, 100% 100%)", xPercent: 0, duration: 1.5, ease: "power3.inout" }) }, scaleTo1 = (e, t = !1) => { gsap.to(e, { scale: 1, opacity: 1, duration: .6, ease: "power3.inout", stagger: t ? .1 : 0, clearProps: !0 }) }, fadeIn = e => { gsap.to(e, { opacity: 1, duration: .6, ease: "power3.inout" }) }, introOverlayFadeIn = () => new Promise(e => { gsap.set(".intro-logo__image", { opacity: 0 }), gsap.to([".intro-overlay", ".transition"], { autoAlpha: 1, duration: .6, ease: "power3.inout", onComplete: e }) }), tlColumnsAnimation = gsap.timeline({ paused: !0, defaults: { ease: "power4inOut" } }); tlColumnsAnimation.to(".transition__column", { duration: 1, scaleX: 2, stagger: .025, delay: .5 }); let animationColumnsEnter = () => new Promise(e => { tlColumnsAnimation.play().then(e) }), animationColumnsLeave = () => new Promise(e => { tlColumnsAnimation.reverse().then(e) }), transitionAnimationReset = () => { gsap.set(".intro-overlay", { autoAlpha: 0 }), gsap.set(".transition", { autoAlpha: 0 }), gsap.set(".transition__column", { scaleX: 0 }), animationColumnsLeave() }, designCssFileUrl = `${e.path}${e.pathCss}design${e.cssPostFix}.css`, locationsCssFileUrl = `${e.path}${e.pathCss}locations${e.cssPostFix}.css`; barba.hooks.beforeEnter(async function (e) { "home" === e.next.namespace ? homeIntroInit(e.next.container) : "about" === e.next.namespace ? aboutIntroInit(e.next.container) : "locations" === e.next.namespace ? locationsIntroInit(e.next.container) : "contact" === e.next.namespace ? contactIntroInit(e.next.container) : "graphic-design" === e.next.namespace ? await graphicDesignIntroInit(e.next.container) : "web-design" === e.next.namespace ? await webDesignIntroInit(e.next.container) : "app-design" === e.next.namespace && await appDesignIntroInit(e.next.container), "locations" !== e.next.namespace && locationBtnsInit(e.next.container) }), barba.hooks.once(async function (e) { "home" === e.next.namespace ? (await homeIntroAnimation(), homeTransitionAnimation("once")) : "about" === e.next.namespace ? aboutIntroAnimation() : "locations" === e.next.namespace ? locationsIntroAnimation() : "contact" === e.next.namespace ? contactIntroAnimation() : "graphic-design" === e.next.namespace ? graphicDesignIntroAnimation() : "web-design" === e.next.namespace ? webDesignIntroAnimation() : "app-design" === e.next.namespace && appDesignIntroAnimation() }), barba.hooks.afterEnter(function (e) { let t = e.current.namespace, a = e.next.namespace; "locations" === a ? addFilesCssToBody([locationsCssFileUrl]) : removeCssFilesFromBody([locationsCssFileUrl]), "contact" === a && contactFormInit(e.next.container), a.includes("design") && !t.includes("design") ? addFilesCssToBody([designCssFileUrl]) : t.includes("design") && !a.includes("design") && removeCssFilesFromBody([designCssFileUrl]) }), barba.init({ debug: e.barbaDebug, sync: !1, views: [], transitions: [{ name: "page-fade-transition", once() { }, async leave(e) { await introOverlayFadeIn(), await animationColumnsEnter(), window.scrollTo(0, 0) }, async enter(e) { "home" === e.next.namespace ? homeTransitionAnimation("enter") : "about" === e.next.namespace ? aboutIntroAnimation() : "locations" === e.next.namespace ? locationsIntroAnimation() : "contact" === e.next.namespace ? contactIntroAnimation() : "web-design" === e.next.namespace ? webDesignIntroAnimation() : "app-design" === e.next.namespace ? appDesignIntroAnimation() : "graphic-design" === e.next.namespace && graphicDesignIntroAnimation() } },] });