import { CONFIG as n } from "https://cdn.jsdelivr.net/gh/blountdj/designo@v27/dist/js/config.min.js"; let { contactFormInit: e } = await import(`${n.path}contact-form.js`), { homeIntroInit: a, homeIntroAnimation: t, homeTransitionAnimation: s } = await import(`${n.path}homeAnimations${n.jsPostFix}.js`), { aboutIntroInit: i, aboutIntroAnimation: o } = await import(`${n.path}aboutAnimations${n.jsPostFix}.js`), { locationsIntroInit: c, locationsIntroAnimation: p } = await import(`${n.path}locationsAnimations${n.jsPostFix}.js`), { contactIntroInit: m, contactIntroAnimation: r } = await import(`${n.path}contactAnimations${n.jsPostFix}.js`), { graphicDesignIntroInit: x, graphicDesignIntroAnimation: l } = await import(`${n.path}graphicDesignAnimations${n.jsPostFix}.js`), { webDesignIntroInit: d, webDesignIntroAnimation: g } = await import(`${n.path}webDesignAnimations${n.jsPostFix}.js`), { appDesignIntroInit: h, appDesignIntroAnimation: j } = await import(`${n.path}appDesignAnimations${n.jsPostFix}.js`), { locationBtnsInit: u } = await import(`${n.path}location-btns${n.jsPostFix}.js`), { initNavMenu: w, toggleNavMenu: F } = await import(`${n.path}nav-bar${n.jsPostFix}.js`), { removeScriptsFromBody: b, addScriptsToBody: P, addFilesCssToBody: f, removeCssFilesFromBody: v } = await import(`${n.path}utilities${n.jsPostFix}.js`), { introOverlayFadeIn: y, animationColumnsEnter: A } = await import(`${n.path}commonAnimations${n.jsPostFix}.js`), designCssFileUrl = `${n.cssPath}${n.cssFolder}css/design${n.cssPostFix}.css`, locationsCssFileUrl = `${n.cssPath}${n.cssFolder}css/locations${n.cssPostFix}.css`, navmenu = document.querySelector(".nav-menu-mobile"), overlay = document.querySelector("#overlay"); barba.hooks.beforeLeave(async function (n) { navmenu.classList.contains("hidden") || F() }), barba.hooks.beforeEnter(async function (n) { "home" === n.next.namespace ? a(n.next.container) : "about" === n.next.namespace ? i(n.next.container) : "locations" === n.next.namespace ? c(n.next.container) : "contact" === n.next.namespace ? m(n.next.container) : "graphic-design" === n.next.namespace ? await x(n.next.container) : "web-design" === n.next.namespace ? await d(n.next.container) : "app-design" === n.next.namespace && await h(n.next.container), "locations" !== n.next.namespace && u(n.next.container) }), barba.hooks.once(async function (n) { "home" === n.next.namespace ? (await t(), s("once")) : "about" === n.next.namespace ? o() : "locations" === n.next.namespace ? p() : "contact" === n.next.namespace ? r() : "graphic-design" === n.next.namespace ? l() : "web-design" === n.next.namespace ? g() : "app-design" === n.next.namespace && j() }), barba.hooks.afterOnce(function (n) { w() }), barba.hooks.afterEnter(function (n) { let a = n.current.namespace, t = n.next.namespace; "locations" === t ? f([locationsCssFileUrl]) : v([locationsCssFileUrl]), "contact" === t && e(n.next.container), t.includes("design") && !a.includes("design") ? f([designCssFileUrl]) : a.includes("design") && !t.includes("design") && v([designCssFileUrl]) }), barba.init({ debug: n.barbaDebug, sync: !1, views: [], transitions: [{ name: "page-fade-transition", once() { }, async leave(n) { await y(), await A(), window.scrollTo(0, 0) }, async enter(n) { "home" === n.next.namespace ? s("enter") : "about" === n.next.namespace ? o() : "locations" === n.next.namespace ? p() : "contact" === n.next.namespace ? r() : "web-design" === n.next.namespace ? g() : "app-design" === n.next.namespace ? j() : "graphic-design" === n.next.namespace && l() } },] });